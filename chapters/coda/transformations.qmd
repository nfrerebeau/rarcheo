# Transformations de données {#sec-coda-transformations}

```{r, echo=FALSE}
source(here::here("common.R"))
```

Sachant les contraintes propres aux données de composition, la plupart des outils statistiques et méthodes d'analyse ne peuvent être mises en œuvre sans prendre le risque d'aboutir à des inférences erronées. Néanmoins, il est possible de trouver une transformation permettant de projeter les données de compositions dans un espace réel non contraint. @aitchison1986 a montré qu'une telle transformation peut être obtenue par le logarithme de rapports de composés.

```{r}
#| label: fig-coda-log-ratio
#| echo: false
#| fig-width: 10.5
#| fig-height: 3.5
#| fig-cap: ""
carre_ilr <- data.frame(
  x = c(-0.5, -0.5, 0.5, 0.5),
  y = c(-0.5, 0.5, 0.5, -0.5)
)

carre_spx <- compositions::ilrInv(carre_ilr)
colnames(carre_spx) <- c("X", "Y", "Z")

carre_alr <- compositions::alr(carre_spx)

# Simplex
par(mfrow = c(1, 3), mar = c(1, 1, 1, 1) + 0.1, las = 1, cex = 1)
isopleuros::ternary_plot(carre_spx, pch = 16, col = "steelblue", font.lab = 1)

# ALR
par(mar = c(4, 4, 1, 1) + 0.1)
plot(as.data.frame(carre_alr), pch = 16, col="steelblue",
     xlab = "log(X/Z)", ylab = "log(Y/Z)",
     xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5), asp = 1)
abline(h = 0, v = 0, lty = 2, lwd = 2, col = "grey")

# ILR
plot(as.data.frame(carre_ilr), pch = 16, col="steelblue",
     xlab = "ILR1", ylab = "ILR2",
     xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5), asp = 1)
abline(h = 0, v = 0, lty = 2, lwd = 2, col = "grey")
```

